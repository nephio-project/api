---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: nfdeployments.workload.nephio.org
spec:
  group: workload.nephio.org
  names:
    kind: NFDeployment
    listKind: NFDeploymentList
    plural: nfdeployments
    singular: nfdeployment
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NFDeploymentSpec defines the characteristics of a deployment
              of a network function
            properties:
              capacity:
                description: capacity defines the capacity characteristics of the
                  NF deployment
                properties:
                  maxDownlinkThroughput:
                    anyOf:
                    - type: integer
                    - type: string
                    description: MaxDownlinkThroughput defines the max downlink dataplane
                      throughput
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  maxNFConnections:
                    description: MaxNFConnections defines the max NF(s) that can be
                      connected to this NF/device
                    type: integer
                  maxSessions:
                    description: MaxSessions defines the max sessions of the control
                      plane expressed in unit of 1000s
                    type: integer
                  maxSubscribers:
                    description: MaxSubscribers defines the max subscribers expressed
                      in unit of 1000s
                    type: integer
                  maxUplinkThroughput:
                    anyOf:
                    - type: integer
                    - type: string
                    description: MaxUplinkThroughput defines the max uplink dataplane
                      throughput
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                type: object
              interfaces:
                description: Interfaces defines the interfaces associated with the
                  NF deployment
                items:
                  description: InterfaceConfig defines the configuration of the interface
                  properties:
                    ipv4:
                      description: IPv4 defines the ipv4 configuration of the interface
                      properties:
                        address:
                          description: Address defines the IPv4 address and prefix
                            length in CIDR notation [IP prefix, range IPv4 with host
                            bits]
                          type: string
                        gateway:
                          description: Gateway defines the IPv4 address associated
                            to the interface as a gateway
                          type: string
                      required:
                      - address
                      type: object
                    ipv6:
                      description: IPv6Config defines the ipv6 configuration of the
                        interface
                      properties:
                        address:
                          description: Address defines the IPv6 address and prefix
                            length in CIDR notation [IP prefix, range IPv6 with host
                            bits]
                          type: string
                        gateway:
                          description: Gateway defines the IPv6 address associated
                            to the interface as a gateway
                          type: string
                      required:
                      - address
                      type: object
                    name:
                      description: Name defines the name of the interface
                      maxLength: 253
                      minLength: 1
                      type: string
                    vlanID:
                      description: VLANID defines the specific vlan id associated
                        on this interface
                      type: integer
                  required:
                  - name
                  type: object
                type: array
              networkInstances:
                description: NetworkInstances defines the network instances associated
                  with the NF deployment
                items:
                  description: A networkInstance is a Layer 3 forwarding construct
                    such as a virtual routing and forwarding (VRF) instance,
                  properties:
                    bgp:
                      description: BGP defines the BGP configuration associated with
                        the network instance
                      properties:
                        autonomousSystem:
                          description: AutonomousSystem defines the AS number of the
                            bgp process
                          type: integer
                        bgpNeighbors:
                          description: BGPNeigbors defines the configuration of the
                            BGP neighbor
                          items:
                            properties:
                              address:
                                description: Address defines the IPv4 or IPv6 address
                                  of the BGP neighbor
                                type: string
                              name:
                                description: BGP interface name, MUST match the one
                                  use in InterfaceConfig
                                type: string
                              peerAS:
                                description: PeerAS defines the AS number of the bgp
                                  peer
                                type: integer
                            required:
                            - address
                            - peerAS
                            type: object
                          type: array
                        routerID:
                          description: RouterID defines the router ID of the bgp process
                          type: string
                      required:
                      - autonomousSystem
                      - bgpNeighbors
                      - routerID
                      type: object
                    dataNetworks:
                      description: DataNetworks defines the data networks assocated
                        with the network instance
                      items:
                        description: A DataNetwork defines the Data Network name defined
                          by 3GPP
                        properties:
                          name:
                            description: Name defines the name of the data network
                            maxLength: 253
                            minLength: 1
                            type: string
                          pool:
                            description: Pool defines the list of address pools associated
                              with the data network
                            items:
                              properties:
                                prefix:
                                  description: Prefix defines the ip cidr in prefix
                                    notation. It is defines as a subnet
                                  pattern: (([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/(([0-9])|([1-2][0-9])|(3[0-2]))|((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))
                                  type: string
                              required:
                              - prefix
                              type: object
                            type: array
                        type: object
                      type: array
                    interfaces:
                      description: interfaces defines the interfaces associated with
                        the network instance
                      items:
                        type: string
                      type: array
                    name:
                      description: Name defines the name of the network instance
                      maxLength: 253
                      minLength: 1
                      type: string
                    peers:
                      description: Peers defines the peer configuration associated
                        with the network instance
                      items:
                        description: A PeerConfig defines the peer configuration
                        properties:
                          ipv4:
                            description: IPv4 defines the ipv4 configuration of the
                              peer
                            properties:
                              address:
                                description: Address defines the IPv4 address and
                                  prefix length in CIDR notation [IP prefix, range
                                  IPv4 with host bits]
                                type: string
                              gateway:
                                description: Gateway defines the IPv4 address associated
                                  to the interface as a gateway
                                type: string
                            required:
                            - address
                            type: object
                          ipv6:
                            description: IPv6 defines the ipv6 configuration of the
                              peer
                            properties:
                              address:
                                description: Address defines the IPv6 address and
                                  prefix length in CIDR notation [IP prefix, range
                                  IPv6 with host bits]
                                type: string
                              gateway:
                                description: Gateway defines the IPv6 address associated
                                  to the interface as a gateway
                                type: string
                            required:
                            - address
                            type: object
                          name:
                            description: Name defines the name of the data network
                            maxLength: 253
                            minLength: 1
                            type: string
                        type: object
                      type: array
                  required:
                  - name
                  type: object
                type: array
              parametersRefs:
                description: ParametersRefs defines addiitonal KRM parmeter references
                  the nf depends upon
                items:
                  properties:
                    apiVersion:
                      description: APIVersion of the target resources
                      type: string
                    kind:
                      description: Kind of the target resources
                      type: string
                    name:
                      description: Name of the target resource
                      type: string
                  type: object
                type: array
              provider:
                description: provider defines which provider implement this NFDeployment
                type: string
            type: object
          status:
            description: NFDeploymentStatus defines the observed state of nf deployment
            properties:
              conditions:
                description: Conditions define the current state of the NF deployment
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: The generation observed by the deployment controller.
                format: int32
                type: integer
            required:
            - observedGeneration
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
